// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  name      String   @db.VarChar(100)
  rides     Ride[]
  bookings  Booking[]
  reviews   Review[]
  createdAt DateTime @default(now()) @db.DateTime(3)
}

model Ride {
  id          Int      @id @default(autoincrement())
  driver      User     @relation(fields: [driverId], references: [id])
  driverId    Int
  startPoint  String   @db.VarChar(255)
  endPoint    String   @db.VarChar(255)
  date        DateTime
  price       Float
  seats       Int
  bookings    Booking[]
  reviews     Review[]
  taken       Boolean @default(false)
  createdAt   DateTime @default(now()) @db.DateTime(3)
}

model Booking {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  ride      Ride     @relation(fields: [rideId], references: [id])
  rideId    Int
  seats     Int
  createdAt DateTime @default(now()) @db.DateTime(3)
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String?  @db.Text
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  ride      Ride     @relation(fields: [rideId], references: [id])
  rideId    Int
  createdAt DateTime @default(now()) @db.DateTime(3)
}
